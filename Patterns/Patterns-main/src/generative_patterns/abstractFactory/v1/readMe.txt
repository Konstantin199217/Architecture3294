                                       Абстрактная фабрика (Abstract Factory)
=======================================================================================================================
    Порождающий паттерн проектирования, который позволяет создавать семейства связанных объектов, не привязываясь к
конкретным классам.
=======================================================================================================================
    Стоит использовать, когда:
      - Система не зависит от того, как создаются, компонуются и представляются входящие в нее объекты;
      - Входящие в семейство взаимосвязанные объекты используются вместе и требуется обеспечить выполнение
        этого ограничения;
      - Система должна конфигурироваться одним из семейств составляющих ее объектов;
      - При необходимости предоставить библиотеку объектов, раскрывая только их интерфейсы, но не реализацию;
=======================================================================================================================
                                    Преимущества и недостатки Abstract Factory
    +
      * Гарантирует сочетаемость создаваемых продуктов;
      * Избавляет клиентский код от привязки к конкретным классам продуктов;
      * Выделяет код производства продуктов в одно место, упрощая поддержку кода;
      * Упрощает добавление новых продуктов в программу;
      * Реализует принцип открытости - закрытости;
    -
      * Усложняет код программы из-за введения множества дополнительных классов;
      * Требует наличия всех типов продуктов в каждой вариации;
=======================================================================================================================
Пример взят с: https://javarush.com/groups/posts/2379-patternih-proektirovanija-abstractfactory