                                       Мост (Bridge)
=======================================================================================================================
    Структурный паттерн проектирования, который разделяет один или несколько классов на две отдельные иерархии -
абстракцию и реализацию, позволяя изменить их независимо друг от друга.
=======================================================================================================================
    Стоит использовать, когда:
          - Мы хотим избежать постоянной привязки абстракции и реализации;
          - Требуется чтобы и абстракции и реализации расширялись новыми подклассами. В таком случае паттерн "Мост"
            позволяет комбинировать разные абстракции и реализации и изменить их независимо;
          - Важно чтобы изменения в реализации абстракции не сказывались на клиентах и клиентский код
            не перекомпилировался;
          - Число подклассов начинает быстро расти. Это признак того, что иерархию следует разнести на две части;
          - Мы хотим разделить одну реализацию между несколькими объектами и этот факт требуется скрыть от клиента;
=======================================================================================================================
                                    Преимущества и недостатки Bridge
    +
      * Позволяет строить платформо-независиммые программы;
      * Скрывает лишние или опасные детали реализации от клиентского кода;
      * Реализует принцип открытости - закрытости
    -
      * Усложняет код программы из-за введения дополнительных подклассов;
=======================================================================================================================
Пример взят с: https://javarush.com/groups/posts/2570-znakomstvo-s-patternom-proektirovanija-bridge