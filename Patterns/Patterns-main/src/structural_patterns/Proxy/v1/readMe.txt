                                       Заместитель (Proxy)
=======================================================================================================================
    Структурный паттерн проектирования, который позволяет подставлять вместо реальных объектов специальные
объекты-заместители. Эти объекты перехватывают вызовы к оригинальному объекту, позволяя сделать что-то до или
после передачи вызова.
=======================================================================================================================
    Стоит использовать, когда:
          - Защищающий заместитель. Когда в программе есть разные типы пользователей и требуется защищать объект от
                                    не авторизированного доступа;
          - Удаленный заместитель. Когда настоящий серверный объект находится на удаленном сервере;
          - Логирующий заместитель. Когда требуется хранить историю обращений к серверному объекту;
          - Умна ссылка (Кеширование объектов). Когда нужно кешировать результаты запросов клиентов и управлять их
                                                жизненным циклом;
          - Ленивая инициализация (Виртуальный прокси). Когда есть тяжелый объект, грузящий данные из файловой системы
                                                        или БД;
=======================================================================================================================
                                    Преимущества и недостатки Proxy
    +
      * Виртуальный заместитель выполняет оптимизацию;
      * Повышает быстродействие и безопасность кода;
    -
      * Усложняет код программы из-за введения дополнительных подклассов;
      * Увеличивает время отклика;
=======================================================================================================================
Пример взят с: https://www.youtube.com/watch?v=EzDkgArMO3U&list=PLlsMRoVt5sTPgGbinwOVnaF1mxNeLAD7P&index=17