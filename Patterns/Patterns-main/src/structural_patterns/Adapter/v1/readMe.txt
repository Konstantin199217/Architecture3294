                                       Адаптер (Adapter)
=======================================================================================================================
    Структурный паттерн проектирования, который позволяет объектам с несовместимыми интерфейсами работать вместе.
    Адаптер преобразует интерфейс, ожидаемый клиентом одного класса в интерфейс другого. Этот паттерн обеспечивает
совместную работу классов с несовместимыми интерфейсами, которая без него была бы не возможна.
=======================================================================================================================
    Стоит использовать, когда:
          - Необходимо использовать действующий класс, но его интерфейс не соответствует нужным потребностям;
          - Собираемся создать повторно используемый класс, который должен взаимодействовать с заранее неизвестными
            или не связанными с ним классами, имеющими несовместимые интерфейсы;
          - Для адаптера объектов необходимо использовать несколько действующих подклассов, но не практично адаптировать
            их интерфейсы путем порождения новых подклассов от каждого. В этом случае адаптер приспосабливает интерфейс
            их общего родителя.
=======================================================================================================================
                                    Преимущества и недостатки Adapter
    +
      * Отделяет и скрывает от клиента подробности преобразования различных интерфейсов;
    -
      * Усложняет код программы из-за введения дополнительных подклассов;
=======================================================================================================================
Пример взят с: https://javarush.com/groups/posts/2139-pattern-proektirovanija-adapter