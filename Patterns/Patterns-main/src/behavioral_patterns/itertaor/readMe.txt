                                       Итератор (Iterator)
=======================================================================================================================
    Поведенческий паттерн проектирования, который дает возможность последовательно обходить элементы составных объектов
не раскрывая их внутреннего представления.
=======================================================================================================================
    Стоит использовать, когда:
          - Для доступа к содержимому агрегированных объектов без раскрытия их внутреннего представления;
          - Для поддержки нескольких активных обходов одного и того же агрегированного объекта;
          - Для представления единообразного интерфейса, что бы обойти различные агрегированные структуры, то есть
            для поддержки полиморфной итерации;
=======================================================================================================================
                                    Преимущества и недостатки Iterator
    +
      * Упрощает класс хранения данных;
      * Позволяет реализовать различные способы обхода структур данных;
      * Позволяет одновременно перемещаться по структуре данных в разные стороны;
    -
      * Неоправдан если можно обойтись простым циклом;
=======================================================================================================================
Пример взят с: https://www.youtube.com/watch?v=yY6oy8xHLT8&list=PLlsMRoVt5sTPgGbinwOVnaF1mxNeLAD7P&index=22